name: Deploy Next.js to Plesk via SSH

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v3

      - name: 📦 Zip public/
        run: zip -r public.zip public

      - name: 📂 Check that .zip files exist before FTP
        run: |
          ls -lh public.zip

      - name: 🚀 Upload .zip files via FTP
        uses: SamKirkland/FTP-Deploy-Action@v4.3.4
        with:
          server: ${{ secrets.PLESK_HOST }}
          username: ${{ secrets.PLESK_USER }}
          password: ${{ secrets.PLESK_PASSWORD }}
          protocol: ftp
          local-dir: ./
          server-dir: ./
          port: 21
          passive: true
          exclude: |
            *
            !public.zip

      - name: 🔧 SSH unzip + start PM2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.PLESK_HOST }}
          username: ${{ secrets.PLESK_USER }}
          password: ${{ secrets.PLESK_PASSWORD }}
          port: 22
          script: |
            set -e
            cd /var/www/vhosts/afkprofitlab.com/httpdocs

            echo "📂 Files in httpdocs before unzip:"
            ls -lh

            echo "📦 Unzipping standalone.zip..."
            unzip -o standalone.zip || { echo "❌ unzip standalone.zip failed"; exit 1; }

            echo "📦 Unzipping static.zip..."
            unzip -o static.zip || { echo "❌ unzip static.zip failed"; exit 1; }

            echo "📦 Unzipping public.zip..."
            unzip -o public.zip || { echo "❌ unzip public.zip failed"; exit 1; }

            echo "📦 Moving static into .next/static"
            mkdir -p .next
            mv -v static .next/static || { echo "❌ move static failed"; exit 1; }

            echo "🧹 Cleaning up zip files..."
            rm -f standalone.zip static.zip public.zip

            echo "🚀 Starting PM2 app"
            cd .next/standalone || { echo "❌ cd .next/standalone failed"; exit 1; }

            if pm2 list | grep -q "afk-next-app"; then
              echo "♻️ Restarting existing PM2 app..."
              pm2 restart afk-next-app
            else
              echo "✨ Starting new PM2 app..."
              pm2 start server.js --name afk-next-app
            fi

            pm2 save
